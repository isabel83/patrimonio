<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
   
 <!-- SPRING SECURITY & SPRING -->
        <context-param>
           <param-name>contextConfigLocation</param-name>
           <param-value>
                 /WEB-INF/applicationContext.xml          
                 /WEB-INF/security-app-context.xml
           </param-value>
        </context-param>
        <!-- SPRING SECURITY & SPRING -->
        
        <!-- SPRING SECURITY -->
        <filter>
                <filter-name>springSecurityFilterChain</filter-name>
                <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        </filter>

        <filter-mapping>
                <filter-name>springSecurityFilterChain</filter-name>
                <url-pattern>/*</url-pattern>
        </filter-mapping>
        <!-- SPRING SECURITY -->

        <!-- SPRING -->
        <listener>
                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
        </listener>
        <!-- SPRING -->
        
        <!-- SPRING SECURITY & SPRING -->
        <!-- Adding the listener to web.xml causes an ApplicationEvent to be published to the Spring ApplicationContext every time 
                 a HttpSession commences or terminates 
                 Esto permite que la aplicacion escuche todos los eventos relacionados con la session del usuario (creacion y destruccion). 
                 Estos eventos heredan de ApplicationEvent -->
        <listener>
          <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
        </listener>
 <!-- SPRING SECURITY & SPRING  -->
        

        <!-- No vamos a definir cada servicio de GWT como un servlet como se hace en GWT puro.
                 Para esto utilizareos el JAR spring4gwt que se encarga de manejar los servicios de spring -->
        <!-- <servlet> -->
        <!-- <servlet-name>greetServlet</servlet-name> -->
        <!-- <servlet-class>au.com.uptick.gwt.maven.sample.server.GreetingServiceImpl</servlet-class> -->
        <!-- </servlet> -->

        <!-- <servlet-mapping> -->
        <!-- <servlet-name>greetServlet</servlet-name> -->
        <!-- <url-pattern>/mygwtmavensampleapp/greet</url-pattern> -->
        <!-- </servlet-mapping> -->

        
        <!--  Esto funciona a la perfeccion para llamadas que no son por AJAX. por ejemplo, para esta aplicacion, esto solo funcionara
                  en caso que hagamos un refresh (F5) de la pagina. En caso que ejecutemos una accion, como por ejemplo, presionamos un boton
                  esto funcionarÃ¡ a medias. Es decir, no redireccionara al login o no mostrara al usuario que es lo que paso, pero 
                  tampoco llevara a cabo la accion, ya que se vencio la session del usuario. -->
        <session-config>
            <session-timeout>1</session-timeout> <!-- in minutes -->
        </session-config>
    
  <!-- servlet>
    <servlet-name>greetServlet</servlet-name>
    <servlet-class>com.patrimonio.plantillas.server.LoginServiceImpl</servlet-class>
  </servlet>
  

  
  <servlet-mapping>
    <servlet-name>greetServlet</servlet-name>
    <url-pattern>/plantillas/greet</url-pattern>
  </servlet-mapping>
  
   Default page to serve -->
  <welcome-file-list>
    <welcome-file>Plantillas.html</welcome-file>
  </welcome-file-list>

</web-app>
